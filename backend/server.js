const express = require('express');
const authRoutes = require('./routes/auth').router;
const operatorRoutes = require('./routes/operator');
const adminRoutes = require('./routes/admin');
const path = require('path');
require('dotenv').config();
const PORT = 3000;
const connection = require('./config/database');

const app = express();

app.use(express.json());
// app.use(require('cors')());
app.use(
  require('cors')({
    origin: [
      'http://localhost:5173',
      'https://currency-exchange-app-zkkc.onrender.com',
      'http://localhost:3000',
    ],
    credentials: false,
    methods: ['GET', 'POST', 'PUT', 'DELETE'],
  })
);

// —Ä–∞–∑–¥–∞—á–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
app.use(express.static(path.join(__dirname, '../frontend/dist')));

// Routes
app.use('/api/auth', authRoutes);
app.use('/api/operator', operatorRoutes);
app.use('/api/admin', adminRoutes);

// –¥–ª—è SPA —Ä–æ—É—Ç–∏–Ω–≥–∞
app.get('/', (req, res) => {
  res.sendFile(path.join(__dirname, '../frontend/dist/index.html'));
});

// –ù–æ–≤—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–æ—É—Ç - –ø–æ–ª—É—á–∞–µ–º –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç –∏–∑ –ë–î
app.get('/api/rates', (req, res) => {
  connection.query('SELECT * FROM currency_rates', (error, results) => {
    if (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', error);
      return res.status(500).json({ error: '–û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö' });
    }
    res.json(results); // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç –∫–ª–∏–µ–Ω—Ç—É
  });
});

// connection –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω

app.get('/api/rates', (req, res) => {
  connection.query(
    'SELECT currency_code, rate FROM currency_rates ORDER BY date DESC',
    (error, results) => {
      if (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫—É—Ä—Å–æ–≤:', error);
        return res.status(500).json({ error: '–û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö' });
      }
      console.log('üìã –ö—É—Ä—Å—ã –∏–∑ –ë–î:', results); // –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
      res.json(results);
    }
  );
});

app.get('/api/rates/:currency', (req, res) => {});

app.listen(PORT, () => {
  console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
});
