import React, { useState, useEffect } from 'react';
import STYLES from '../styles/AdminPanel.module.css';

const API_URL = import.meta.env.VITE_API_URL || 'http://localhost:3000';

const AdminPanel = () => {
  const [rateForm, setRateForm] = useState({
    currency: 'USD',
    rate: '',
  });
  const [currentRates, setCurrentRates] = useState({});
  const [loading, setLoading] = useState(false);

  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∫—É—Ä—Å—ã –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    loadCurrentRates();
    loadReports();
  }, []);

  const loadCurrentRates = async () => {
    try {
      console.log('üü° –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∫—É—Ä—Å–æ–≤...');
      const response = await fetch(`${API_URL}/api/rates`);

      console.log('üì° –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:', response.status);
      console.log('üì° Response ok:', response.ok);

      if (!response.ok) {
        throw new Error(`–û—à–∏–±–∫–∞ HTTP: ${response.status}`);
      }

      const data = await response.json();
      console.log('üìä –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:', data);

      const rates = {};
      data.forEach((rate) => {
        rates[rate.currency_code] = rate.rate;
      });

      console.log('üü¢ –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω—ã–µ –∫—É—Ä—Å—ã:', rates);
      setCurrentRates(rates);
    } catch (error) {
      console.error('üî¥ –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫—É—Ä—Å–æ–≤:', error);
      // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    }
  };
  const handleSetRate = async (e) => {
    e.preventDefault();
    setLoading(true);

    const user = JSON.parse(localStorage.getItem('user'));

    try {
      const response = await fetch(`${API_URL}/api/admin/rates`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'x-user-login': user.login,
          'x-user-role': user.role,
        },
        body: JSON.stringify(rateForm),
      });

      const data = await response.json();
      if (data.success) {
        alert(data.message);
        setRateForm({ ...rateForm, rate: '' });
        loadCurrentRates(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∫—É—Ä—Å–æ–≤
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞:', error);
      alert('–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫—É—Ä—Å–∞');
    } finally {
      setLoading(false);
    }
  };

  const handleResetRates = async () => {
    if (
      !window.confirm(
        '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ –∫—É—Ä—Å—ã –∫ –Ω–∞—á–∞–ª—å–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏—è–º?'
      )
    ) {
      return;
    }

    setLoading(true);
    const user = JSON.parse(localStorage.getItem('user'));

    try {
      const response = await fetch(`${API_URL}/api/admin/reset-rates`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'x-user-login': user.login,
          'x-user-role': user.role,
        },
      });

      const data = await response.json();
      if (data.success) {
        alert(data.message);
        loadCurrentRates(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∫—É—Ä—Å–æ–≤
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞:', error);
      alert('–û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ –∫—É—Ä—Å–æ–≤');
    } finally {
      setLoading(false);
    }
  };

  const [reports, setReports] = useState([]);

  const loadReports = async () => {
    const user = JSON.parse(localStorage.getItem('user'));
    const response = await fetch(`${API_URL}/api/admin/reports`, {
      headers: { 'x-user-login': user.login, 'x-user-role': user.role },
    });
    const data = await response.json();
    if (data.success) setReports(data.reports);
  };

  return (
    <div className={STYLES.adminContainer}>
      <h1 className={STYLES.title}>–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</h1>

      <form onSubmit={handleSetRate} className={STYLES.rateForm}>
        <h3 className={STYLES.formTitle}>–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫—É—Ä—Å –≤–∞–ª—é—Ç—ã</h3>
        <div className={STYLES.formRow}>
          <div className={STYLES.formGroup}>
            <label className={STYLES.label}>–í–∞–ª—é—Ç–∞:</label>
            <select
              value={rateForm.currency}
              onChange={(e) =>
                setRateForm({ ...rateForm, currency: e.target.value })
              }
              className={STYLES.select}
            >
              <option value="USD">USD</option>
              <option value="EUR">EUR</option>
              <option value="BYN">BYN</option>
            </select>
          </div>

          <div className={STYLES.formGroup}>
            <label className={STYLES.label}>–ö—É—Ä—Å:</label>
            <input
              type="number"
              step="0.0001"
              placeholder="–ö—É—Ä—Å"
              value={rateForm.rate}
              onChange={(e) =>
                setRateForm({ ...rateForm, rate: e.target.value })
              }
              required
              className={STYLES.input}
            />
          </div>

          <button
            type="submit"
            disabled={loading}
            className={STYLES.submitButton}
          >
            {loading ? '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...' : '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫—É—Ä—Å'}
          </button>
        </div>
      </form>

      {/* –°–µ–∫—Ü–∏—è —Å–±—Ä–æ—Å–∞ –∫—É—Ä—Å–æ–≤ */}
      <div className={STYLES.resetSection}>
        <h3 className={STYLES.resetTitle}>–°–±—Ä–æ—Å –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç</h3>
        <p>–í–µ—Ä–Ω—É—Ç—å –≤—Å–µ –∫—É—Ä—Å—ã –∫ –Ω–∞—á–∞–ª—å–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏—è–º:</p>
        <button
          onClick={handleResetRates}
          disabled={loading}
          className={STYLES.resetButton}
        >
          {loading ? '–°–±—Ä–æ—Å...' : '–°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ –∫—É—Ä—Å—ã'}
        </button>

        {/* –¢–µ–∫—É—â–∏–µ –∫—É—Ä—Å—ã */}
        <div className={STYLES.currentRates}>
          <h4 className={STYLES.ratesTitle}>–¢–µ–∫—É—â–∏–µ –∫—É—Ä—Å—ã:</h4>
          <div className={STYLES.rateItem}>
            <span>USD:</span>
            <span>{currentRates.USD || '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}</span>
          </div>
          <div className={STYLES.rateItem}>
            <span>EUR:</span>
            <span>{currentRates.EUR || '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}</span>
          </div>
          <div className={STYLES.rateItem}>
            <span>BYN:</span>
            <span>{currentRates.BYN || '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}</span>
          </div>
        </div>

        <div className={STYLES.reportsSection}>
          <h3>–û—Ç—á–µ—Ç—ã –ø–æ –æ–±–º–µ–Ω–∞–º</h3>
          {reports.map((report) => (
            <div key={report.date}>
              {report.date}: {report.operations_count} –æ–ø–µ—Ä–∞—Ü–∏–π
            </div>
          ))}
        </div>
      </div>
    </div>
  );
};

export default AdminPanel;
